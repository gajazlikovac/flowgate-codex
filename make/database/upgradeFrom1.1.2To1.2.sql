UPDATE flowgate SET `metricsformulars`.`SENSOR`= ENCODE_JSON(metricsformulars.SENSOR)  where 
metricsformulars.SENSOR IS NOT MISSING and 
(TYPE(metricsformulars.SENSOR) != 'string') and _class='com.vmware.flowgate.common.model.Asset';

UPDATE flowgate SET `metricsformulars`.`PDU`= ENCODE_JSON(metricsformulars.PDU)  where 
metricsformulars.PDU IS NOT MISSING and 
(TYPE(metricsformulars.PDU) != 'string') and _class='com.vmware.flowgate.common.model.Asset';

INSERT INTO flowgate (KEY, VALUE) VALUES ("readInternalFacilityByID", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readInternalFacilityByID","resource":[{"pattern":"/v1/facilitysoftware/internal/**","httpMethod":"GET","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("readInternalFacilityByType", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readInternalFacilityByType","resource":[{"pattern":"/v1/facilitysoftware/internal/type/**","httpMethod":"GET","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("createFacilityAdapter", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"createFacilityAdapter","resource":[{"pattern":"/v1/facilityadapter","httpMethod":"POST","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("updateFacilityAdapter", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"updateFacilityAdapter","resource":[{"pattern":"/v1/facilityadapter","httpMethod":"PUT","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("readAnFacilityAdapterById", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readAnFacilityAdapterById","resource":[{"pattern":"/v1/facilityadapter/**","httpMethod":"GET","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("deleteAnFacilityAdapterById", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"deleteAnFacilityAdapterById","resource":[{"pattern":"/v1/facilityadapter/**","httpMethod":"DELETE","sortWeight":"10"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("readFacilityAdaptersByPage", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readFacilityAdaptersByPage","resource":[{"pattern":"/v1/facilityadapter/pagenumber/**","httpMethod":"GET","sortWeight":"20"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("readAllFacilityAdapters", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readAllFacilityAdapters","resource":[{"pattern":"/v1/facilityadapter","httpMethod":"GET","sortWeight":"5"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("getAllMetricDatasByIDAndDuration", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"getAllMetricDatasByIDAndDuration","resource":[{"pattern":"/v1/assets/**/metrics","httpMethod":"GET","sortWeight":"25"}]});
INSERT INTO flowgate (KEY, VALUE) VALUES ("readMetricDatas", {"_class":"com.vmware.flowgate.common.model.PrivilegeResourceMapping","privilegeName":"readMetricDatas","resource":[{"pattern":"/v1/assets/**/realtimedata","httpMethod":"GET","sortWeight":"100"}]});

UPDATE flowgate SET `privilegeNames`= ["getAllMetricDatasByIDAndDuration","readMetricDatas","readAllFacilityAdapters","createFacilityAdapter","updateFacilityAdapter","readAnFacilityAdapterById","deleteAnFacilityAdapterById","readFacilityAdaptersByPage","batchCreateAssetIpMapping","updateHostNameAndIPMappingByID","searchAssetName","readHostNameAndIPMappingByPage","deleteHostNameAndIPMappingByID","mappingfacility","readServerMappingByID","readPDUMetricsDataByAssetID","readServerMetricsDataByAssetID","readAssetByAssetNameAndAssetNumber","updateExpiredTimeRange","getExpiredTimeRange","cleanRealTimeDataByTimeRange","readAssetByPduIsNotNull","deleteServerMapping","readMappingsByVROID","readMappingsByVCID","readAssetBySource","updateFacilitySoftwareConfigStatus","updateSddcSoftwareConfigStatus","readSystemSummary","tempHumidityMapping","readUserByUserName","facilityServerSyncDataByServerId","syncDataByServerId","readVROByUser","readUnMappedServers","readAssetsByVCID","readPrivileges","createAnAsset","createAssets","readAsset","readAssetByAssetName","readAssetBySourceAndType","readAssetByType","readMappedAsset","readAssetByKeywords","readAssetByPduIsNull","updateAsset","deleteAsset","createRealTimeSensorDatas","createRealTimeSensorData","readServerSensorData","createServerMapping","readAssetsByVROID","updateServerMapping","mergeServerMapping","readMappingsByVROIDAndPage","readMappingsByVCIDAndPage","createHostNameAndIPMapping","createFacilitySoftwareConfig","readFacilityByID","readFacilityByType","readInternalFacilityByID","readInternalFacilityByType","readFacilityByPage","deleteFacilitySoftwareConfig","updateFacilitySoftwareConfig","startFullMappingAggregation","generateServerPDUMapping","syncHostnameByIp","readVROJobs","readVCJobs","readJobByType","createSddcSoftwareConfig","deleteSddcSoftwareConfig","updateSddcSoftwareConfig","readSddcSoftwareConfigByID","readSddcSoftwareConfigByVC","readSddcSoftwareConfigByUserAndPage","readVROsSddcSoftwareConfigByUser","readSddcSoftwareConfigByTypeAndUser","createSensorSetting","readSensorSettingByID","readSensorSettingsByPage","updateSensorSetting","deleteSensorSetting","readHostNameAndIPMapping","deleteUser","updateUser","readUserByID","readUserByPage","readUsers","createRole","readRole","readRolesByPage","deleteRole","updateRole","Default_Access_Privilege"]
where roleName = "admin" and _class = "com.vmware.flowgate.common.model.WormholeRole";
UPDATE flowgate SET `privilegeNames`= ["getAllMetricDatasByIDAndDuration","readMetricDatas","mappingfacility","readServerMappingByID","syncHostnameByIp","readPDUMetricsDataByAssetID","readServerMetricsDataByAssetID","readAssetByAssetNameAndAssetNumber","readAssetByPduIsNotNull","deleteServerMapping","readMappingsByVROID","readMappingsByVCID","readAssetBySource","updateSddcSoftwareConfigStatus","readVROByUser","readAssetsByVCID","readAsset","readAssetByAssetName","readAssetBySourceAndType","readAssetByType","readMappedAsset","readAssetByKeywords","readAssetByPduIsNull","createServerMapping","readAssetsByVROID","updateServerMapping","mergeServerMapping","readMappingsByVROIDAndPage","readMappingsByVCIDAndPage","createSddcSoftwareConfig","deleteSddcSoftwareConfig","updateSddcSoftwareConfig","readSddcSoftwareConfigByID","readSddcSoftwareConfigByVC","readSddcSoftwareConfigByUserAndPage","readVROsSddcSoftwareConfigByUser","readSddcSoftwareConfigByTypeAndUser","readHostNameAndIPMapping","Default_Access_Privilege","readInternalFacilityByID","readInternalFacilityByType"]
where roleName = "api" and _class = "com.vmware.flowgate.common.model.WormholeRole";
